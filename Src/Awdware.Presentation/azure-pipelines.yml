trigger:
  branches:
    include:
    - master
  paths:
    include:
    - presentation/*

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: YarnInstaller@3
  inputs:
    versionSpec: '1.x'
    checkLatest: true

- task: Yarn@3
  inputs:
    projectDirectory: 'presentation/'
    arguments: 'install'
  displayName: 'yarn install'


- task: SonarCloudPrepare@1
  continueOnError: true
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'sonarcloud'
    organization: 'awdware'
    scannerMode: CLI
    configMode: manual
    cliProjectKey: 'awdware:presentation'
    cliSources: presentation
    extraProperties: |
     sonar.sources=presentation/src
     sonar.sourceEncoding=UTF-8
     sonar.exclusions=**/node_modules/**,**/*.spec.ts
     sonar.tests=presentation/src
     sonar.test.inclusions=**/*.spec.ts
     sonar.ts.tslintconfigpath=presentation/tslint.json
     sonar.exclusions=**/node_modules/**,**/*.spec.ts


- task: Yarn@3
  inputs:
    projectDirectory: 'presentation/'
    arguments: 'run build-prod'
  displayName: 'build productive'

# - task: Yarn@3
#   inputs:
#     projectDirectory: 'presentation/'
#     arguments: 'run test-unit'
#   displayName: 'unit test'
#   continueOnError: true

- task: Yarn@3
  inputs:
    projectDirectory: 'presentation/'
    arguments: 'run lint-build'
  displayName: 'linting'
  continueOnError: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'presentation/dist/presentation/'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: publish build

- task: SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'
  continueOnError: true

- task: SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'
  continueOnError: true
  inputs:
    pollingTimeoutSec: '300'